{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "Myadfcamhome01"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/copycamhomefiles_v2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "new",
				"activities": [
					{
						"name": "CAMHOMEFILECOPY_v1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.1:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "CAM_HOME01/*.jpg"
							},
							{
								"name": "Destination",
								"value": "camhome/@{concat('CAM_HOME01/IMAGES/',formatDateTime(utcNow(),'yyyyMMdd'))}/"
							}
						],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "FtpReadSettings",
									"recursive": true,
									"wildcardFolderPath": "CAM_HOME01",
									"wildcardFileName": {
										"value": "@concat('*',formatDateTime(addDays(utcNow(),-1),'yyMMdd'),'*.jpg')",
										"type": "Expression"
									},
									"useBinaryTransfer": true,
									"deleteFilesAfterCompletion": true,
									"disableChunking": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"skipErrorFile": {
								"fileMissing": false
							},
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "camahomeoutstore",
										"type": "LinkedServiceReference"
									},
									"path": "camhome/CAM_HOME01"
								}
							},
							"dataIntegrationUnits": 2
						},
						"inputs": [
							{
								"referenceName": "Camhomeinputs_copy_v2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Camhomeout_copyV2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"concurrency": 1,
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [
					"SHIJU JOY"
				],
				"lastPublishTime": "2022-08-25T22:40:27Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/copycamhomefiles_v3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "new",
				"activities": [
					{
						"name": "CAMHOMEFILECOPY_v1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.1:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": true,
							"secureInput": true
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "CAM_HOME01/*.jpg"
							},
							{
								"name": "Destination",
								"value": "camhome/@{concat('CAM_HOME01/IMAGES/',formatDateTime(utcNow(),'yyyyMMddHHss'))}/"
							}
						],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "FtpReadSettings",
									"recursive": true,
									"wildcardFolderPath": "CAM_HOME01",
									"wildcardFileName": {
										"value": "@concat('*',formatDateTime(addDays(utcNow(),0),'yyMMdd'),'*.jpg')",
										"type": "Expression"
									},
									"useBinaryTransfer": true,
									"deleteFilesAfterCompletion": true,
									"disableChunking": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false,
							"parallelCopies": 1,
							"skipErrorFile": {
								"fileMissing": false
							},
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "camahomeoutstore",
										"type": "LinkedServiceReference"
									},
									"path": "camhome/CAM_HOME01"
								}
							},
							"dataIntegrationUnits": 2
						},
						"inputs": [
							{
								"referenceName": "Camhomeinputs_v3",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Camhomeout_v3",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"concurrency": 1,
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [
					"SHIJU JOY"
				],
				"lastPublishTime": "2022-08-25T22:40:27Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/citycodeload')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "citycodecsv",
								"type": "DatasetReference"
							},
							"name": "citycode"
						},
						{
							"dataset": {
								"referenceName": "currencycsv",
								"type": "DatasetReference"
							},
							"name": "currencycode"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTablecity",
								"type": "DatasetReference"
							},
							"name": "sinkcitycode"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTablecurrecny",
								"type": "DatasetReference"
							},
							"name": "sinkcurrency"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          id as short,",
						"          alpha2 as string,",
						"          alpha3 as string,",
						"          name as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> citycode",
						"source(output(",
						"          Column_1 as string,",
						"          Column_2 as string,",
						"          Column_3 as string,",
						"          Column_4 as string,",
						"          Column_5 as string,",
						"          Column_6 as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> currencycode",
						"citycode sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:true,",
						"     insertable:true,",
						"     updateable:true,",
						"     upsertable:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          id,",
						"          code1 = alpha2,",
						"          code2 = alpha3,",
						"          name",
						"     )) ~> sinkcitycode",
						"currencycode sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'allErrors',",
						"     transactionCommit: 'batch',",
						"     reportSuccessOnError: false,",
						"     mapColumn(",
						"          country = Column_1,",
						"          currency_name = Column_2,",
						"          currency_code = Column_3,",
						"          currency_id = Column_4,",
						"          min_unit = Column_5,",
						"          last_changedate = Column_6",
						"     )) ~> sinkcurrency"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelinecitycurrencymaster')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "citycodeload",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.1:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "citycodeload",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"citycode": {},
									"currencycode": {},
									"sinkcitycode": {},
									"sinkcurrency": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 16,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"runConcurrently": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/citycodeload')]"
			]
		}
	]
}